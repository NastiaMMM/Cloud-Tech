ls - list storage - виводить на екран всміст нашого місцезнаходження ls -a - вивести всі файли і папки  ls -l - довга версія лістингу
pwd - віжображення робочої директорії (місце знаходження)
clear - очищення вікна терміналу
cd - зміна/перехід до дерикторії(команда без аргументів перенесе в домашню папку) .. - повернутись на директорію вище (cd ..)
pushd - тимчасовий перехід в директорію  popd - повернутись до місця з якого було виконано команду pushd
file - виводить тип файлу
locate - database >>> sudo updatedb      locate - база даних усіх файлів в ОС і шукає всі файли з потрібною введеною назвою   sudo updatedb - оновлює базу даних утиліти locate
find - пошук файлів за критеріями (дозволами, користувачами , групами , типами файлів , датою , розміром...)
which - пошук команди (шляху до команди)
history - 1000 lines, histsize histfilesize
whatis - виводить опис команди
cal - виводить календар
apropos - знаходить все що містить в собі введену частину слова
Ctrl+W - видаляє слово
man - відкрити мануал до команди
less - відкриття файлу в пейджері (звичайний перегляд без модливості редагування, не змінює дату останнього редагування| Q - щоб вийти)
mkdir - створення директорії
touch - змінить дату редагування уже створеного файла або створить файл якщо його нема
cp - копіює вміст вибраного файлу
mv - переіменовує або переміщає файл
rm - видалення rm file* - знаходить всі файли які починаються на слово file і видаляє їх | rm *2* - видалить все, що містить в своїй назві 2 | rm -r - рекурсивне видалення (так як папки з файлами команда не видаляє, спочатку видаляться всі файли в папці, а тоді сама папка) | rm -rf * - видаляє все з поточного каталогу  |  Приклад обєднання (конкатинації - concatenate): cat file1 file2 > file3 
rmdir - видаляє тільки пусті директорії
cat - виводить вміст файлу в консоль | cat >> file - введення тексту в файл file через консоль (перенаправлення виводу консолі у файл). ^C - вийти (перервати) ^D(в новому рядку) - закінчити (END).
more less - space and q,  >> uparrow downarrow / search q space
nano - текстовий редактор, відкриває уже існуючий файл для перегляду і редагування, або якщо такого не існує - створює ого і відкриває 
vim - редагує файли у вигляді звичайного тексту. В основному використовується для написання програм.

Перенаправлення
> - перезапис
>> - дописування
? - один символ
| - пайп. зазвичай використовується для перенаправлення в команду. для перенаправлення у файл використовують >, >>. 

cat 1.txt 2.txt 3.txt > 123.txt - запис вмісту файлів з ліва від > у файл з права від >
history | less - приклад пайпування, тобто вивід команди history з ліва від |, подається на ввід команді lessз з права ввід |
 
echo - повторює ввід, echo hello > file.txt - перенаправить вивід команди echo у файл file.txt, тобто запише ввід у файл, а якщо точніше перезапише дані файлу, якщо потрібно дописати у файл, то використовуються >> (приклад: echo hello >> file.txt)

sudo su - перехід до користувача root (супер юзер) (команда exit, щоб вийти)
su - перехід за іншого користувача. su jack - перехід на одну команду |  su - jack - логінить як користувача jack
users - виводить на екран всіх користувачів, які зарез користуються цим комп'ютером
who - виводить більше інформації про власного користувача, включаючи час входу в систему
id - ще більше інформації про користувача (що за користувач, групи...) 



CtrlShift++ -- - відповідно збільшення і зменшення зуму
free - показує кількість вільної і зайнятої ОЗУ | free -h - відображення ресурсів ОЗУ в більш зручному для сприйняття людиною форматі.  -h(human readable)
watch - повторення команди кожні дві секунди (приклад: watch free -h)
df - виводить всі місця збергання інформації в системі (SSD, HDD ...)
killall - вбиває всі програми які містять вказану назву (приклад: killall firefox)
exit(Ctrl+D) - вихід з користувача
ps - диспетчер задач.   psp aux - вивести інформацію про всіх юзерів і запущені ними команди. виділяє юзера який запустив команду і саму команду
kill - посилає сигнал до процесу по його PID, (приклад: kill -KILL 3339 - вбиває процес. є і інші ключі)
top - диспетчер задач який оновлюється кожні декілька секунд (вийти Q)
grep - порядковий фільтр (зазвичай на вхід команди закидають вивід іншої команди через пайп) приклад: ps aux | grep firefox
uptime - показує час роботи, кількість користувачів, load average.


set - вивід середовища   set | less - перегляд даних середовища у більш зручному форматі з можливістю пошуку - environment
printenv - вивід середовища але менш структуровано

files:
.bashrc - файл сценарію, який виконується під час входу користувача. Сам файл містить ряд конфігурацій для термінального сеансу. Це включає налаштування або ввімкнення: розфарбовування, завершення, історія оболонки, псевдоніми команд тощо.
.bash_history - Файл, створений Bash, програмою оболонки на базі Unix, яка зазвичай використовується в операційних системах Mac OS X і Linux; зберігає історію команд користувача, введених у командному рядку; використовується для перегляду старих команд, які були виконані.
.bash_logout - Це окремий файл очищення оболонки входу(логіну), який виконується при виході з оболонки входу. Файл ~/.bash_logout читається та виконується щоразу, коли закривається оболонка входу. Таким чином, ви можете вийти, ввівши команду виходу або натиснувши комбінацію клавіш CTRL+D

.profile
Файл .profile у Linux знаходиться під файлами запуску системи (визначає середовище користувача після читання файлів ініціалізації, які ви налаштували під час входу в оболонку).
Такий файл, як /etc/profile, керує змінними для профілю всіх користувачів системи, тоді як .profile дозволяє налаштувати власне середовище.
Файл .profile знаходиться у вашому домашньому каталозі ($HOME) і дозволяє налаштувати ваше індивідуальне робоче середовище.

. (as read command) - прочитати команду
alias - додаткове ім'я (псевдонім). Нписання аліаса приклад: alias nano='nano -l'
\ls (bypass alias) - ігнорує аліас 


wc - рахує слова, рядки та байти для файлів
uniq - виводити тілкьки унікальні рядки ( також може фільтрувати текстовий файл та виводить кількість унікальних рядків, або визначати які рядочки повторюються і скільки разів ...)
sort - сортує тестові лінії
diff - різниця між двома або більше файлами
head - виводить перших 10 рядочків файлу tail - виводить останніх 10 рядків файлу  tail -f - дозволить слідкувати за файлом (тобто слідкувати за живим логом в реальному часі)
grep - текстовий процесор, який працює з рядками
сut - текстовий процесор, який працює з колонками
awk - аліас для mawk, який являється процесором для мови awk і дозволяє виконувати дуже багато маніпуляцій з текстом

ss - виводить статискику по сокетам  ss -tulpn - інформація про прослуховування (щоб отримати максимум інфи виконувати через sudo)  sudo ss -tulpn | grep -i listen - виводить всі рядки з написовм LISTEN не враховуючи UPkeys. 
sudo lsof -i -Pn | grep -i LISTEN -  те саме що і з командую ss але більш читабельно.

expansion в BASH (інтерпритація символів/знаків або спецсимволи):
~ - домашня директорія
* - вибирає все (наприклад вміст всієї директорії), в текстовому параметрі - будь яка кількість, будь яких символів.
$(( )) arithmetic expansion - аифметична експансія, в серединіподвійних дужок можна виконувати елементарні арифметичні операції над цілими числами
brace expansion - текстова експансія  приклад: echo {1..5} ... text{var1,var2,var3}text    {1..5} {a..z} {01..09}  {5..1}  a{A{1,2},B{1,2}}b 
$() - створення(визначення) змінної приклад: DATE=$(date) старий варіант аналогічний дужкам може використовувати лапки DATE='date'
